{"version":3,"file":"display.min.js","sources":["../src/display.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Display the views limits for course modules.\n *\n * @module     availability_maxviews/display\n * @copyright  2024 Mohammad Farouk <phun.for.physics@gmail.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nimport $ from \"jquery\";\n\n/**\n *\n * @param {number} cmid the cm id\n * @param {string} render the content\n */\nexport const init = (cmid, render) => {\n\n    // For any other course format.\n    // Some course formats like Tiles uses Ajax to display course modules.\n    // Use mutation observers to observe any change in the main region\n    // to display the required information.\n    const config = { attributes: true, childList: true, subtree: true };\n\n    const callback = (mutationList) => {\n        for (const mutation of mutationList) {\n            if (mutation.type === \"childList\") {\n                appendViews(cmid, render);\n            }\n        }\n    };\n\n    // Create an observer instance linked to the callback function\n    const observer = new MutationObserver(callback);\n\n    $(document).ready(function() {\n        let regionMain = document.getElementById(\"region-main\");\n        appendViews(cmid, render);\n        // Start observing the target node for configured mutations\n        observer.observe(regionMain, config);\n    });\n};\n\n/**\n * append information about limitation of max number allowed to view a course module.\n *\n * @param {number} cmid\n * @param {string} render\n */\nfunction appendViews(cmid, render) {\n    let existed = $(\"#availability_maxviews_count_\"+cmid);\n    if (!existed || !existed[0] || existed[0] == undefined) {\n        let module = $(\"#module-\"+cmid+\" .description\");\n        if (module !== null) {\n            module.append(render);\n        }\n    }\n}\n"],"names":["appendViews","cmid","render","existed","undefined","module","append","config","attributes","childList","subtree","observer","MutationObserver","mutationList","mutation","type","document","ready","regionMain","getElementById","observe"],"mappings":";;;;;;;mJA8DSA,YAAYC,KAAMC,YACnBC,SAAU,mBAAE,gCAAgCF,UAC3CE,UAAYA,QAAQ,IAAoBC,MAAdD,QAAQ,GAAiB,KAChDE,QAAS,mBAAE,WAAWJ,KAAK,iBAChB,OAAXI,QACAA,OAAOC,OAAOJ,uBAtCN,CAACD,KAAMC,gBAMjBK,OAAS,CAAEC,YAAY,EAAMC,WAAW,EAAMC,SAAS,GAWvDC,SAAW,IAAIC,kBATHC,mBACT,MAAMC,YAAYD,aACG,cAAlBC,SAASC,MACTf,YAAYC,KAAMC,+BAQ5Bc,UAAUC,OAAM,eACVC,WAAaF,SAASG,eAAe,eACzCnB,YAAYC,KAAMC,QAElBS,SAASS,QAAQF,WAAYX"}